{"name":"Practicalmachinelearning","tagline":"WriteupProject","body":"---\r\ntitle: \"Practical Machine Learning\"\r\nauthor: \"Melvin B. Badon\"\r\ndate: \"Tuesday, January 13, 2015\"\r\noutput: html_document\r\n---\r\n\r\nScripts have been produced and tested on RSudio Version 0.98.1087 and Windows 7.\r\n\r\nThis document is the Final Project for the MOOC \"Practical Machine Learning\"\" from Johns Hopkins University. Assignement Instructions\r\n\r\n(Background, Data and What you should submit sections are directly copied from course's assignement page)\r\n\r\n####Background\r\n\r\nUsing devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement - a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: [http://groupware.les.inf.puc-rio.br/har] (see the section on the Weight Lifting Exercise Dataset).\r\n\r\n####Data\r\n\r\nThe training data for this project are available here: [https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv]\r\n\r\nThe test data are available here: [https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv]\r\n\r\nThe data for this project come from this source: [http://groupware.les.inf.puc-rio.br/har]. If you use the document you create for this class for any purpose please cite them as they have been very generous in allowing their data to be used for this kind of assignment.\r\n\r\n####What you should submit\r\n\r\nThe goal of your project is to predict the manner in which they did the exercise. This is the \"classe\" variable in the training set. You may use any of the other variables to predict with. You should create a report describing how you built your model, how you used cross validation, what you think the expected out of sample error is, and why you made the choices you did. You will also use your prediction model to predict 20 different test cases.\r\n\r\nYour submission should consist of a link to a Github repo with your R markdown and compiled HTML file describing your analysis. Please constrain the text of the writeup to < 2000 words and the number of figures to be less than 5. It will make it easier for the graders if you submit a repo with a gh-pages branch so the HTML page can be viewed online (and you always want to make it easy on graders :-).\r\nYou should also apply your machine learning algorithm to the 20 test cases available in the test data above. Please submit your predictions in appropriate format to the programming assignment for automated grading. See the programming assignment for additional details.\r\n\r\n##Preliminary Work\r\n####Reproduceability\r\n\r\nAn overall pseudo-random number generator seed was set at 1234 for all code. In order to reproduce the results below, the same seed should be used.\r\nDifferent packages were downloaded and installed, such as caret and randomForest. These should also be installed in order to reproduce the results below (please see code below for ways and syntax to do so).\r\n\r\n####How the model was built\r\n\r\nOur outcome variable is classe, a factor variable with 5 levels. For this data set, \"participants were asked to perform one set of 10 repetitions of the Unilateral Dumbbell Biceps Curl in 5 different fashions:\r\n\r\n- Class A - exactly according to the specification\r\n- Class B - throwing the elbows to the front \r\n- Class C - lifting the dumbbell only halfway\r\n- Class D - lowering the dumbbell only halfway\r\n- Class E - throwing the hips to the front\r\n\r\nClass A corresponds to the specified execution of the exercise, while the other 4 classes correspond to common mistakes.\" [1]\r\nPrediction evaluations will be based on maximizing the accuracy and minimizing the out-of-sample error. All other available variables after cleaning will be used for prediction.\r\nTwo models will be tested using decision tree and random forest algorithms. The model with the highest accuracy will be chosen as our final model.\r\n\r\n####Cross-validation\r\n\r\nCross-validation will be performed by subsampling our training data set randomly without replacement into 2 subsamples: subTraining data (75% of the original Training data set) and subTesting data (25%). Our models will be fitted on the subTraining data set, and tested on the subTesting data. Once the most accurate model is choosen, it will be tested on the original Testing data set.\r\n\r\n####Expected out-of-sample error\r\n\r\nThe expected out-of-sample error will correspond to the quantity: 1-accuracy in the cross-validation data. Accuracy is the proportion of correct classified observation over the total sample in the subTesting data set. Expected accuracy is the expected accuracy in the out-of-sample data set (i.e. original testing data set). Thus, the expected value of the out-of-sample error will correspond to the expected number of missclassified observations/total observations in the Test data set, which is the quantity: 1-accuracy found from the cross-validation data set.\r\n\r\n####Reasons for my choices\r\n\r\nOur outcome variable \"classe\" is an unordered factor variable. Thus, we can choose our error type as 1-accuracy. We have a large sample size with N= 19622 in the Training data set. This allow us to divide our Training sample into subTraining and subTesting to allow cross-validation. Features with all missing values will be discarded as well as features that are irrelevant. All other features will be kept as relevant variables.\r\nDecision tree and random forest algorithms are known for their ability of detecting the features that are important for classification [2]. Feature selection is inherent, so it is not so necessary at the data preparation phase. Thus, there won't be any feature selection section in this report.\r\n\r\n##Code and Results\r\n####Packages, Libraries, Seed\r\n\r\nInstalling packages, loading libraries, and setting the seed for reproduceability:\r\n\r\n```{r,echo=FALSE,results='hide'}\r\n#install.packages(\"caret\")\r\n#install.packages(\"randomForest\")\r\n#install.packages(\"rpart\")\r\nlibrary(caret)\r\n## Loading required package: lattice\r\n## Loading required package: ggplot2\r\nlibrary(randomForest) #Random forest for classification and regression\r\n## randomForest 4.6-10\r\n## Type rfNews() to see new features/changes/bug fixes.\r\nlibrary(rpart) # Regressive Partitioning and Regression trees\r\nlibrary(rpart.plot) # Decision Tree plot\r\n\r\n# setting the overall seed for reproduceability\r\nset.seed(1234)\r\n```\r\n\r\n####Loading data sets and preliminary cleaning\r\n\r\nFirst we want to load the data sets into R and make sure that missing values are coded correctly.\r\nIrrelevant variables will be deleted.\r\nResults will be hidden from the report for clarity and space considerations.\r\n\r\n```{r,echo=FALSE,results='hide'}\r\n# After saving both data sets into my working directory\r\n# Some missing values are coded as string \"#DIV/0!\" or \"\" or \"NA\" - these will be changed to NA.\r\n# We notice that both data sets contain columns with all missing values - these will be deleted.  \r\n\r\n# Loading the training data set into my R session replacing all missing with \"NA\"\r\ntrainingset <- read.csv(\"https://github.com/melvinbadon/PracticalMachineLearning/blob/master/training.csv\",header=TRUE, na.strings=c(\"NA\",\"#DIV/0!\", \"\"))\r\n\r\n# Loading the testing data set \r\ntestingset <- read.csv('https://github.com/melvinbadon/PracticalMachineLearning/blob/master/testing.csv', na.strings=c(\"NA\",\"#DIV/0!\", \"\"))\r\n\r\n# Check dimensions for number of variables and number of observations\r\ndim(trainingset)\r\ndim(testingset)\r\n\r\n# Delete columns with all missing values\r\ntrainingset<-trainingset[,colSums(is.na(trainingset)) == 0]\r\ntestingset <-testingset[,colSums(is.na(testingset)) == 0]\r\n\r\n# Some variables are irrelevant to our current project: user_name, raw_timestamp_part_1, raw_timestamp_part_,2 cvtd_timestamp, new_window, and  num_window (columns 1 to 7). We can delete these variables.\r\ntrainingset   <-trainingset[,-c(1:7)]\r\ntestingset <-testingset[,-c(1:7)]\r\n\r\n# and have a look at our new datasets:\r\ndim(trainingset)\r\ndim(testingset)\r\nhead(trainingset)\r\nhead(testingset)\r\n```\r\n\r\n####Partitioning the training data set to allow cross-validation\r\n\r\nThe training data set contains 53 variables and 19622 obs.\r\nThe testing data set contains 53 variables and 20 obs.\r\nIn order to perform cross-validation, the training data set is partionned into 2 sets: subTraining (75%) and subTest (25%).\r\nThis will be performed using random subsampling without replacement.\r\n\r\n```{r,echo=FALSE,results='hide'}\r\nsubsamples <- createDataPartition(y=trainingset$classe, p=0.75, list=FALSE)\r\nsubTraining <- trainingset[subsamples, ] \r\nsubTesting <- trainingset[-subsamples, ]\r\ndim(subTraining)\r\ndim(subTesting)\r\nhead(subTraining)\r\nhead(subTesting)\r\n```\r\n####A look at the Data\r\n\r\nThe variable \"classe\" contains 5 levels: A, B, C, D and E. A plot of the outcome variable will allow us to see the frequency of each levels in the subTraining data set and compare one another.\r\n\r\n```{r,echo=FALSE}\r\nplot(subTraining$classe, col=\"yellow\", main=\"Plot of levels of the variable classe within the subTraining data set\", xlab=\"classe levels\", ylab=\"Frequency\")\r\n```\r\n\r\nFrom the graph we can see that each level frequency is within the same order of magnitude of each other. Level A is the most frequent with more than 4000 occurrences while level D is the least frequent with about 2500 occurrences.\r\n\r\n####First prediction model: Using Decision Tree\r\n```{r,echo=FALSE}\r\nmodel1 <- rpart(classe ~ ., data=subTraining, method=\"class\")\r\n\r\n## Predicting:\r\nprediction1 <- predict(model1, subTesting, type = \"class\")\r\n\r\n# Plot of the Decision Tree\r\nrpart.plot(model1, main=\"Classification Tree\", extra=102, under=TRUE, col=\"blue\", faclen=0)\r\n\r\n\r\n# Test results on our subTesting data set:\r\nconfusionMatrix(prediction1, subTesting$classe)\r\n```\r\n\r\n####Second prediction model: Using Random Forest\r\n```{r,echo=FALSE}\r\nmodel2 <- randomForest(classe ~. , data=subTraining, method=\"class\")\r\n\r\n# Predicting:\r\nprediction2 <- predict(model2, subTesting, type = \"class\")\r\n\r\n# Test results on subTesting data set:\r\nconfusionMatrix(prediction2, subTesting$classe)\r\n```\r\n####Decision\r\n\r\nAs expected, Random Forest algorithm performed better than Decision Trees.\r\nAccuracy for Random Forest model was 0.995 (95% CI: (0.993, 0.997)) compared to 0.739 (95% CI: (0.727, 0.752)) for Decision Tree model. The random Forest model is choosen. The accuracy of the model is 0.995. The expected out-of-sample error is estimated at 0.005, or 0.5%. The expected out-of-sample error is calculated as 1 - accuracy for predictions made against the cross-validation set. Our Test data set comprises 20 cases. With an accuracy above 99% on our cross-validation data, we can expect that very few, or none, of the test samples will be missclassified.\r\n\r\n##Submission\r\n```{r,echo=FALSE}\r\n# predict outcome levels on the original Testing data set using Random Forest algorithm\r\npredictfinal <- predict(model2, testingset, type=\"class\")\r\npredictfinal\r\n\r\n```\r\n\r\n```{r,echo=FALSE,eval=FALSE}\r\n# Write files for submission\r\npml_write_files = function(x){\r\n  n = length(x)\r\n  for(i in 1:n){\r\n    filename = paste0(\"problem_id_\",i,\".txt\")\r\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\r\n  }\r\n}\r\n\r\npml_write_files(predictfinal)\r\n```\r\n\r\n##References\r\n[1] Velloso, E.; Bulling, A.; Gellersen, H.; Ugulino, W.; Fuks, H. Qualitative Activity Recognition of Weight Lifting Exercises. Proceedings of 4th International Conference in Cooperation with SIGCHI (Augmented Human '13) . Stuttgart, Germany: ACM SIGCHI, 2013.\r\n\r\n[2] Krzysztof Gra??bczewski and Norbert Jankowski. Feature Selection with Decision Tree Criterion.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}